#!/bin/bash

# Demo Application Test Status
# This script shows the status of all test scripts and what they verify

echo "üß™ Demo Application Test Status"
echo "==============================="
echo ""

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Change to demo directory
cd "$(dirname "$0")"

echo "üìç Working directory: $(pwd)"
echo ""

# Check test script availability
echo -e "${BLUE}üìã Available Test Scripts:${NC}"
echo ""

if [ -f "verify-setup.sh" ] && [ -x "verify-setup.sh" ]; then
    echo -e "${GREEN}‚úÖ verify-setup.sh${NC} - Basic setup verification (no dependencies required)"
else
    echo -e "${RED}‚ùå verify-setup.sh${NC} - Missing or not executable"
fi

if [ -f "test-demo.sh" ] && [ -x "test-demo.sh" ]; then
    echo -e "${GREEN}‚úÖ test-demo.sh${NC} - Setup verification tests (requires dependencies)"
else
    echo -e "${RED}‚ùå test-demo.sh${NC} - Missing or not executable"
fi

if [ -f "test-setup.php" ]; then
    echo -e "${GREEN}‚úÖ test-setup.php${NC} - Comprehensive PHP tests"
else
    echo -e "${RED}‚ùå test-setup.php${NC} - Missing"
fi

if [ -f "test-qr-flow.php" ]; then
    echo -e "${GREEN}‚úÖ test-qr-flow.php${NC} - QR code flow tests"
else
    echo -e "${RED}‚ùå test-qr-flow.php${NC} - Missing"
fi

if [ -f "run-tests.sh" ] && [ -x "run-tests.sh" ]; then
    echo -e "${GREEN}‚úÖ run-tests.sh${NC} - Main test runner"
else
    echo -e "${RED}‚ùå run-tests.sh${NC} - Missing or not executable"
fi

echo ""

# Check dependencies
echo -e "${BLUE}üì¶ Dependency Status:${NC}"
echo ""

if [ -d "vendor" ]; then
    echo -e "${GREEN}‚úÖ Composer dependencies installed${NC}"
    DEPS_INSTALLED=true
else
    echo -e "${YELLOW}‚ö†Ô∏è  Composer dependencies not installed${NC}"
    echo "   Run: composer install"
    DEPS_INSTALLED=false
fi

if [ -f ".env" ]; then
    echo -e "${GREEN}‚úÖ Environment file exists${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Environment file missing${NC}"
    echo "   Run: cp .env.example .env && php artisan key:generate"
fi

if [ -f "database/database.sqlite" ]; then
    echo -e "${GREEN}‚úÖ Database file exists${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Database file missing${NC}"
    echo "   Will be created automatically during tests"
fi

echo ""

# Recommended test sequence
echo -e "${BLUE}üöÄ Recommended Test Sequence:${NC}"
echo ""

echo "1. ${GREEN}Basic Setup Verification${NC} (no dependencies required):"
echo "   ./verify-setup.sh"
echo ""

if [ "$DEPS_INSTALLED" = true ]; then
    echo "2. ${GREEN}Install Dependencies${NC} (already done):"
    echo "   ‚úÖ Dependencies are installed"
    echo ""
    
    echo "3. ${GREEN}Run All Tests${NC}:"
    echo "   ./run-tests.sh"
    echo ""
    
    echo "4. ${GREEN}Individual Test Suites${NC} (optional):"
    echo "   ./test-demo.sh          # Basic setup tests"
    echo "   php test-setup.php      # Comprehensive tests"
    echo "   php test-qr-flow.php    # QR flow tests"
else
    echo "2. ${YELLOW}Install Dependencies${NC} (required):"
    echo "   composer install"
    echo ""
    
    echo "3. ${YELLOW}Run All Tests${NC} (after installing dependencies):"
    echo "   ./run-tests.sh"
    echo ""
    
    echo "4. ${YELLOW}Individual Test Suites${NC} (after installing dependencies):"
    echo "   ./test-demo.sh          # Basic setup tests"
    echo "   php test-setup.php      # Comprehensive tests"
    echo "   php test-qr-flow.php    # QR flow tests"
fi

echo ""

# Test coverage summary
echo -e "${BLUE}üìä Test Coverage Summary:${NC}"
echo ""

echo "‚úÖ File Structure Verification"
echo "‚úÖ Laravel Application Structure"
echo "‚úÖ Configuration Files"
echo "‚úÖ Database Migration and Seeding"
echo "‚úÖ Application Startup"
echo "‚úÖ QR Code Generation"
echo "‚úÖ Token Management"
echo "‚úÖ Login Flow Simulation"
echo "‚úÖ Error Handling"
echo "‚úÖ Token Expiration"

echo ""

if [ "$DEPS_INSTALLED" = true ]; then
    echo -e "${GREEN}üéâ Ready to run tests! Start with: ./run-tests.sh${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Install dependencies first: composer install${NC}"
fi